// <auto-generated />
using System;
using MUS.Game.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MUS.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20241126080234_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("InventoryItemGenerator", b =>
                {
                    b.Property<int>("InventoriesPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("ItemGeneratorsPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("InventoriesPrimaryKey", "ItemGeneratorsPrimaryKey");

                    b.HasIndex("ItemGeneratorsPrimaryKey");

                    b.ToTable("InventoryItemGenerator");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Being", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int>("CreatedByUserPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("InventoryPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("RoomPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("CreatedByUserPrimaryKey");

                    b.HasIndex("InventoryPrimaryKey");

                    b.HasIndex("RoomPrimaryKey");

                    b.ToTable("Beings");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.GameSettings", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int>("DefaultSpawnRoomPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("DefaultSpawnRoomPrimaryKey");

                    b.ToTable("GameSettings");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Inventory", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.HasKey("PrimaryKey");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Item", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PrimaryKey");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.ItemGenerator", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int>("IntervalInTicks")
                        .HasColumnType("int");

                    b.Property<int>("ItemPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int");

                    b.Property<int>("MinQuantity")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("ItemPrimaryKey");

                    b.ToTable("ItemGenerators");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.ItemStack", b =>
                {
                    b.Property<int>("ItemPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("InventoryPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemPrimaryKey", "InventoryPrimaryKey");

                    b.HasIndex("InventoryPrimaryKey");

                    b.ToTable("ItemsStacks");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Obscurity", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("RoomPoolPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("RoomPoolPrimaryKey");

                    b.ToTable("Obscurities");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Room", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("InventoryPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("ObscurityPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("InventoryPrimaryKey");

                    b.HasIndex("ObscurityPrimaryKey");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.RoomInPool", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int?>("RoomPoolPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("RoomPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("RoomPoolPrimaryKey");

                    b.HasIndex("RoomPrimaryKey");

                    b.ToTable("RoomInPool");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.RoomPool", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PrimaryKey");

                    b.ToTable("RoomPools");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.TickCounter", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<ulong>("TickCount")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("PrimaryKey");

                    b.ToTable("TickCounter");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.User", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("PickedBeingPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("PickedBeingPrimaryKey");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoomRoom", b =>
                {
                    b.Property<int>("ConnectedFromRoomsPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("ConnectedToRoomsPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("ConnectedFromRoomsPrimaryKey", "ConnectedToRoomsPrimaryKey");

                    b.HasIndex("ConnectedToRoomsPrimaryKey");

                    b.ToTable("RoomRoom");
                });

            modelBuilder.Entity("InventoryItemGenerator", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Inventory", null)
                        .WithMany()
                        .HasForeignKey("InventoriesPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.ItemGenerator", null)
                        .WithMany()
                        .HasForeignKey("ItemGeneratorsPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Being", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.User", "CreatedByUser")
                        .WithMany("CreatedBeings")
                        .HasForeignKey("CreatedByUserPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("Inventory");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.GameSettings", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Room", "DefaultSpawnRoom")
                        .WithMany()
                        .HasForeignKey("DefaultSpawnRoomPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefaultSpawnRoom");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.ItemGenerator", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.ItemStack", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Obscurity", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.RoomPool", "RoomPool")
                        .WithMany()
                        .HasForeignKey("RoomPoolPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RoomPool");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Room", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Obscurity", "Obscurity")
                        .WithMany()
                        .HasForeignKey("ObscurityPrimaryKey");

                    b.Navigation("Inventory");

                    b.Navigation("Obscurity");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.RoomInPool", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.RoomPool", null)
                        .WithMany("RoomsInPool")
                        .HasForeignKey("RoomPoolPrimaryKey");

                    b.HasOne("MUS.Game.Data.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("RoomPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.User", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Being", "PickedBeing")
                        .WithMany()
                        .HasForeignKey("PickedBeingPrimaryKey");

                    b.Navigation("PickedBeing");
                });

            modelBuilder.Entity("RoomRoom", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("ConnectedFromRoomsPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("ConnectedToRoomsPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MUS.Game.Data.Models.RoomPool", b =>
                {
                    b.Navigation("RoomsInPool");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.User", b =>
                {
                    b.Navigation("CreatedBeings");
                });
#pragma warning restore 612, 618
        }
    }
}
