// <auto-generated />
using System;
using MUS.Game.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MUS.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20250116123211_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("BeingFeature", b =>
                {
                    b.Property<int>("AssociatedWithBeingsPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("FeaturesPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("AssociatedWithBeingsPrimaryKey", "FeaturesPrimaryKey");

                    b.HasIndex("FeaturesPrimaryKey");

                    b.ToTable("BeingFeature");
                });

            modelBuilder.Entity("FeatureRoom", b =>
                {
                    b.Property<int>("RequiredFeaturesPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("RequiredInRoomsPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("RequiredFeaturesPrimaryKey", "RequiredInRoomsPrimaryKey");

                    b.HasIndex("RequiredInRoomsPrimaryKey");

                    b.ToTable("FeatureRoom");
                });

            modelBuilder.Entity("InventoryItemHatcher", b =>
                {
                    b.Property<int>("InventoriesPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("ItemHatchersPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("InventoriesPrimaryKey", "ItemHatchersPrimaryKey");

                    b.HasIndex("ItemHatchersPrimaryKey");

                    b.ToTable("InventoryItemHatcher");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Being", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int>("CreatedByUserPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("FreeInventoryPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("InRoomPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RoomInsidePrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("TradeInventoryPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("CreatedByUserPrimaryKey");

                    b.HasIndex("FreeInventoryPrimaryKey");

                    b.HasIndex("InRoomPrimaryKey");

                    b.HasIndex("Name");

                    b.HasIndex("RoomInsidePrimaryKey")
                        .IsUnique();

                    b.HasIndex("TradeInventoryPrimaryKey");

                    b.ToTable("Beings");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.CraftComponent", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int?>("CraftPlanPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("ItemPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("CraftPlanPrimaryKey");

                    b.HasIndex("ItemPrimaryKey");

                    b.ToTable("CraftComponent");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.CraftPlan", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int>("ProductPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("ProductPrimaryKey")
                        .IsUnique();

                    b.ToTable("CraftPlans");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Feature", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("Name");

                    b.ToTable("Features");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.GameSettings", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int>("DefaultBeingPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("DefaultSpawnRoomPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("GameDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("TickIntervalSeconds")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("DefaultBeingPrimaryKey");

                    b.HasIndex("DefaultSpawnRoomPrimaryKey");

                    b.ToTable("GameSettings");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Inventory", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.HasKey("PrimaryKey");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Item", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int?>("DeploymentPrototypePrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("DeploymentPrototypePrimaryKey");

                    b.HasIndex("Name");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.ItemHatcher", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int>("IntervalInTicks")
                        .HasColumnType("int");

                    b.Property<int>("ItemPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("MaximumQuantity")
                        .HasColumnType("int");

                    b.Property<int>("MinimumQuantity")
                        .HasColumnType("int");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("ItemPrimaryKey");

                    b.ToTable("ItemHatchers");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.ItemStack", b =>
                {
                    b.Property<int>("ItemPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("InventoryPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ItemPrimaryKey", "InventoryPrimaryKey");

                    b.HasIndex("InventoryPrimaryKey");

                    b.ToTable("ItemsStacks");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Offer", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int>("CreatedByBeingPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("ItemToBuyPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("ItemToSellPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("QuantityToBuy")
                        .HasColumnType("int");

                    b.Property<int>("QuantityToSell")
                        .HasColumnType("int");

                    b.Property<bool>("Repeat")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("CreatedByBeingPrimaryKey");

                    b.HasIndex("ItemToBuyPrimaryKey");

                    b.HasIndex("ItemToSellPrimaryKey");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Room", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<int>("ConnectionLimit")
                        .HasColumnType("int");

                    b.Property<int?>("CuriosityPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<bool>("GlobalAccess")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("InventoryPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("CuriosityPrimaryKey");

                    b.HasIndex("InventoryPrimaryKey");

                    b.HasIndex("Name");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.RoomPool", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int?>("FeeItemPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("FeeItemPrimaryKey");

                    b.HasIndex("Name");

                    b.ToTable("RoomPools");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.TickCounter", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<ulong>("TickCount")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("PrimaryKey");

                    b.ToTable("TickCounter");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.User", b =>
                {
                    b.Property<int>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("PrimaryKey"));

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("SelectedBeingPrimaryKey")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("SelectedBeingPrimaryKey");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RoomRoom", b =>
                {
                    b.Property<int>("ConnectedFromRoomsPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("ConnectedToRoomsPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("ConnectedFromRoomsPrimaryKey", "ConnectedToRoomsPrimaryKey");

                    b.HasIndex("ConnectedToRoomsPrimaryKey");

                    b.ToTable("RoomRoom");
                });

            modelBuilder.Entity("RoomRoomPool", b =>
                {
                    b.Property<int>("PrototypesPrimaryKey")
                        .HasColumnType("int");

                    b.Property<int>("RoomPoolsPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("PrototypesPrimaryKey", "RoomPoolsPrimaryKey");

                    b.HasIndex("RoomPoolsPrimaryKey");

                    b.ToTable("RoomRoomPool");
                });

            modelBuilder.Entity("BeingFeature", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Being", null)
                        .WithMany()
                        .HasForeignKey("AssociatedWithBeingsPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Feature", null)
                        .WithMany()
                        .HasForeignKey("FeaturesPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FeatureRoom", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Feature", null)
                        .WithMany()
                        .HasForeignKey("RequiredFeaturesPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("RequiredInRoomsPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InventoryItemHatcher", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Inventory", null)
                        .WithMany()
                        .HasForeignKey("InventoriesPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.ItemHatcher", null)
                        .WithMany()
                        .HasForeignKey("ItemHatchersPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Being", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.User", "CreatedByUser")
                        .WithMany("CreatedBeings")
                        .HasForeignKey("CreatedByUserPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Inventory", "FreeInventory")
                        .WithMany()
                        .HasForeignKey("FreeInventoryPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Room", "InRoom")
                        .WithMany("BeingsHere")
                        .HasForeignKey("InRoomPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Room", "RoomInside")
                        .WithOne("InBeing")
                        .HasForeignKey("MUS.Game.Data.Models.Being", "RoomInsidePrimaryKey");

                    b.HasOne("MUS.Game.Data.Models.Inventory", "TradeInventory")
                        .WithMany()
                        .HasForeignKey("TradeInventoryPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByUser");

                    b.Navigation("FreeInventory");

                    b.Navigation("InRoom");

                    b.Navigation("RoomInside");

                    b.Navigation("TradeInventory");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.CraftComponent", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.CraftPlan", null)
                        .WithMany("Components")
                        .HasForeignKey("CraftPlanPrimaryKey");

                    b.HasOne("MUS.Game.Data.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.CraftPlan", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Item", "Product")
                        .WithOne("CraftPlan")
                        .HasForeignKey("MUS.Game.Data.Models.CraftPlan", "ProductPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.GameSettings", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Being", "DefaultBeing")
                        .WithMany()
                        .HasForeignKey("DefaultBeingPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Room", "DefaultSpawnRoom")
                        .WithMany()
                        .HasForeignKey("DefaultSpawnRoomPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DefaultBeing");

                    b.Navigation("DefaultSpawnRoom");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Item", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Being", "DeploymentPrototype")
                        .WithMany()
                        .HasForeignKey("DeploymentPrototypePrimaryKey");

                    b.Navigation("DeploymentPrototype");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.ItemHatcher", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.ItemStack", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Inventory", "Inventory")
                        .WithMany("ItemStacks")
                        .HasForeignKey("InventoryPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Offer", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Being", "CreatedByBeing")
                        .WithMany("CreatedOffers")
                        .HasForeignKey("CreatedByBeingPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Item", "ItemToBuy")
                        .WithMany()
                        .HasForeignKey("ItemToBuyPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Item", "ItemToSell")
                        .WithMany()
                        .HasForeignKey("ItemToSellPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedByBeing");

                    b.Navigation("ItemToBuy");

                    b.Navigation("ItemToSell");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Room", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.RoomPool", "Curiosity")
                        .WithMany("Curiosities")
                        .HasForeignKey("CuriosityPrimaryKey");

                    b.HasOne("MUS.Game.Data.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curiosity");

                    b.Navigation("Inventory");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.RoomPool", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Item", "FeeItem")
                        .WithMany()
                        .HasForeignKey("FeeItemPrimaryKey");

                    b.Navigation("FeeItem");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.User", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Being", "SelectedBeing")
                        .WithMany()
                        .HasForeignKey("SelectedBeingPrimaryKey");

                    b.Navigation("SelectedBeing");
                });

            modelBuilder.Entity("RoomRoom", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("ConnectedFromRoomsPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("ConnectedToRoomsPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RoomRoomPool", b =>
                {
                    b.HasOne("MUS.Game.Data.Models.Room", null)
                        .WithMany()
                        .HasForeignKey("PrototypesPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MUS.Game.Data.Models.RoomPool", null)
                        .WithMany()
                        .HasForeignKey("RoomPoolsPrimaryKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Being", b =>
                {
                    b.Navigation("CreatedOffers");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.CraftPlan", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Inventory", b =>
                {
                    b.Navigation("ItemStacks");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Item", b =>
                {
                    b.Navigation("CraftPlan");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.Room", b =>
                {
                    b.Navigation("BeingsHere");

                    b.Navigation("InBeing");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.RoomPool", b =>
                {
                    b.Navigation("Curiosities");
                });

            modelBuilder.Entity("MUS.Game.Data.Models.User", b =>
                {
                    b.Navigation("CreatedBeings");
                });
#pragma warning restore 612, 618
        }
    }
}
